# 引入的是druid-spring-boot-starter 如果直接引入druid创建连接池会非常慢。暂时不清楚是为什么
# 初始连接数
spring.datasource.druid.initial-size=10
# 最小连接数
spring.datasource.druid.min-idle=5
# 最大活跃数
spring.datasource.druid.max-active=15
# 配置获取连接等待超时的时间
spring.datasource.druid.max-wait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.druid.time-between-eviction-runs-millis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.druid.min-evictable-idle-time-millis=300000
# 初始化时默认执行SQL
spring.datasource.druid.validation-query=SELECT 1 FROM DUAL
# 初始化SQL的执行超时时间
spring.datasource.druid.validation-query-timeout=30000
# 指明连接是否被空闲连接回收器(如果有)进行检验.如果检测失败,则连接将被从池中去除.
spring.datasource.druid.test-while-idle=true
# 检测池里连接的可用性 true时非常消耗性能，但是可以检测掉坏连接
spring.datasource.druid.test-on-borrow=false
spring.datasource.druid.test-on-return=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.druid.pool-prepared-statements=true
spring.datasource.druid.max-pool-prepared-statement-per-connection-size=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.druid.filters=stat,wall
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.druid.connection-properties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 排除一些额外的网址，例如* .js，/ jslib / *等等。配置在init-param中。
spring.datasource.druid.web-stat-filter.exclusions=*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*

# 监控部分
# 合并多个DruidDataSource的监控数据
spring.datasource.druid.use-global-data-source-stat=true
# 登录后台监控的账号密码
spring.datasource.druid.stat-view-servlet.login-username=druid
spring.datasource.druid.stat-view-servlet.login-password=druid
# 展示页面
spring.datasource.druid.stat-view-servlet.enabled=true
# 展示路径
spring.datasource.druid.stat-view-servlet.url-pattern=/druid/*
# 是否可以重置数据
spring.datasource.druid.stat-view-servlet.reset-enable=false
# session统计功能
spring.datasource.druid.web-stat-filter.session-stat-enable=true
# 以便druid能够知道当前的session的用户是谁。
spring.datasource.druid.web-stat-filter.principal-session-name=druid
# 如果您的用户信息保存在Cookie中，您可以配置principalCookieName，则druid知道当前的用户是谁
spring.datasource.druid.web-stat-filter.principal-cookie-name=druid
# 配置文件启用能够监视监控URL调用的sql列表。
spring.datasource.druid.web-stat-filter.profile-enable=true
# spring 监控
spring.datasource.druid.aop-patterns=com.project.*.controller.*